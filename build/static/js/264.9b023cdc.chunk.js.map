{"version":3,"file":"static/js/264.9b023cdc.chunk.js","mappings":"4JAGA,MA0BA,EA1BmBA,IAAiB,IAAhB,OAAEC,GAAQD,EAC5B,MAAM,SAAEE,EAAQ,WAAEC,EAAU,IAAEC,EAAG,KAAEC,EAAI,KAAEC,GAASL,EAElD,OACEM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCF,EAAAA,EAAAA,MAAA,WAASC,UAAU,wBAAuBC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,UAAQC,OAAQN,EAAMO,KAAK,gBAC3BF,EAAAA,EAAAA,KAAA,OAAKG,IAAKT,EAAKU,IAAK,GAAGR,YAAgBS,QAAQ,aAGjDR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,KAAA,KAAAD,SAAIN,OAGNI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEH,KAC9BI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,KAAA,KAAAD,SAAIP,cAIN,ECuBV,EA3CuBF,IAAuB,IAAtB,QAAEgB,EAAU,IAAIhB,EACtC,MAAOiB,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,ECLuBC,MAC7B,MAAOC,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,GAenC,OAbAK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAASA,KACb,MAAMC,EAAQC,OAAOC,WACFL,EAAfG,GAAS,KAAe,EACnBA,GAAS,KAAe,EACxBA,GAAS,IAAc,EAClB,EAAE,EAIlB,OAFAD,IACAE,OAAOE,iBAAiB,SAAUJ,GAC3B,IAAME,OAAOG,oBAAoB,SAAUL,EAAO,GACxD,IAEIH,CAAK,EDXSD,IAErBG,EAAAA,EAAAA,YAAU,KACR,MAAMO,EAAWC,KAAKC,IAAIjB,EAAQkB,OAASd,EAAc,GACrDH,EAAcc,GAChBb,EAAea,EACjB,GACC,CAACX,EAAcJ,EAAQkB,OAAQjB,IAElC,MAAMkB,EAAcnB,EAAQoB,MAAMnB,EAAaA,EAAcG,GAEvDiB,EAAYL,KAAKC,IAAIjB,EAAQkB,OAASd,EAAe,EAAG,GAM9D,OACEb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iBAAgBC,SAAC,aAC/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAC1B0B,EAAYG,KAAKrC,IAChBS,EAAAA,EAAAA,KAAA,OAAqBF,UAAU,cAAaC,UAC1CC,EAAAA,EAAAA,KAAC6B,EAAU,CAACtC,OAAQA,KADZA,EAAOuC,SAKrB9B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAC3BgC,MAAMC,KAAK,CAAER,OAAQG,IAAaC,KAAI,CAACK,EAAGC,KACzClC,EAAAA,EAAAA,KAAA,QAEEF,UAAW,QAAOoC,IAAM3B,EAAc,SAAW,IACjD4B,QAASA,KAnBnB3B,EAmBwC0B,EAAG,GAF5BA,YAOT,C","sources":["components/review-card/review-card.jsx","routes/reviews/reviews-preview.jsx","utils/cardsPerPage.jsx"],"sourcesContent":["import React from 'react'\nimport './review-card.styles.scss'\n\nconst ReviewCard = ({ review }) => {\n  const { location, reviewText, png, webp, user } = review\n\n  return (\n    <div className=\"review-card-container\">\n      <picture className=\"profile-image-wrapper\">\n        <source srcSet={webp} type=\"image/webp\" />\n        <img src={png} alt={`${user} profile`} loading=\"lazy\" />\n      </picture>\n\n      <div className=\"review-card\">\n        <div className=\"user-review\">\n          <p>{reviewText}</p>\n        </div>\n\n        <div className=\"review-user-info-footer\">\n          <div className=\"review-user\">{user}</div>\n          <div className=\"review-location\">\n            <p>{location}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ReviewCard\n","import { useState, useEffect } from 'react'\nimport ReviewCard from '../../components/review-card/review-card'\nimport { useCardsPerPage } from '../../utils/cardsPerPage'\nimport './reviews-preview.styles.scss'\n\nconst ReviewsPreview = ({ reviews = [] }) => {\n  const [activeIndex, setActiveIndex] = useState(0)\n  const cardsPerPage = useCardsPerPage()\n\n  useEffect(() => {\n    const maxIndex = Math.max(reviews.length - cardsPerPage, 0)\n    if (activeIndex > maxIndex) {\n      setActiveIndex(maxIndex)\n    }\n  }, [cardsPerPage, reviews.length, activeIndex])\n\n  const activeCards = reviews.slice(activeIndex, activeIndex + cardsPerPage)\n\n  const totalDots = Math.max(reviews.length - cardsPerPage + 1, 1)\n\n  const handleDotClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <div className=\"reviews-preview\">\n      <h2 className=\"reviews-header\">Reviews</h2>\n      <div className=\"reviews-carousel\">\n        <div className=\"review-cards\">\n          {activeCards.map((review) => (\n            <div key={review.id} className=\"review-card\">\n              <ReviewCard review={review} />\n            </div>\n          ))}\n        </div>\n        <div className=\"carousel-dots\">\n          {Array.from({ length: totalDots }).map((_, i) => (\n            <span\n              key={i}\n              className={`dot ${i === activeIndex ? 'active' : ''}`}\n              onClick={() => handleDotClick(i)}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ReviewsPreview\n","import { useState, useEffect } from 'react'\n\nexport const useCardsPerPage = () => {\n  const [cards, setCards] = useState(1)\n\n  useEffect(() => {\n    const update = () => {\n      const width = window.innerWidth\n      if (width >= 1200) setCards(4)\n      else if (width >= 1024) setCards(3)\n      else if (width >= 768) setCards(2)\n      else setCards(1)\n    }\n    update()\n    window.addEventListener('resize', update)\n    return () => window.removeEventListener('resize', update)\n  }, [])\n\n  return cards\n}\n"],"names":["_ref","review","location","reviewText","png","webp","user","_jsxs","className","children","_jsx","srcSet","type","src","alt","loading","reviews","activeIndex","setActiveIndex","useState","cardsPerPage","useCardsPerPage","cards","setCards","useEffect","update","width","window","innerWidth","addEventListener","removeEventListener","maxIndex","Math","max","length","activeCards","slice","totalDots","map","ReviewCard","id","Array","from","_","i","onClick"],"sourceRoot":""}